name: 测试

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: 设置 Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi

    - name: 代码风格检查 (Ruff)
      run: |
        ruff check .
        ruff format --check .

    - name: 类型检查 (MyPy)
      run: |
        mypy .

    - name: 运行测试
      run: |
        pytest tests/ -v --cov=cocox --cov-report=xml --cov-report=html

    - name: 上传覆盖率报告到 Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # 代码质量检查
  quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 设置 Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: 安全检查
      run: |
        pip install bandit safety
        bandit -r cocox/
        safety check 
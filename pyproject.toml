[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "cocox"
version = "0.1.0"
description = "Python Boilerplate contains all the boilerplate you need to create a Python package."
readme = "README.rst"
authors = [
  {name = "liferecords", email = "yjmm10@yeah.net"}
]
maintainers = [
  {name = "liferecords", email = "yjmm10@yeah.net"}
]
classifiers = [

]
license = {text = "MIT license"}
dependencies = [
  "typer",
  "pycocotools>=2.0.8",
  "pydantic>=2.11.4",
  "faster_coco_eval>=1.6.5",
  "loguru>=0.7.3",
  "opencv-python>=4.11.0",
  "seaborn>=0.13.2"
]

[project.optional-dependencies]
dev = [
    "coverage",  # testing
    "mypy",  # linting
    "pytest",  # testing
    "pytest-cov",  # coverage for pytest
    "ruff",  # linting
    "sphinx>=7.2.6",  # documentation
    "twine>=5.0.0",  # publishing
    "bump2version>=0.5.11",  # version management
    "tox>=3.14.0"  # testing
]

[project.urls]

bugs = "https://github.com/liferecords/cocox/issues"
changelog = "https://github.com/liferecords/cocox/blob/master/changelog.md"
homepage = "https://github.com/liferecords/cocox"

[tool.setuptools.package-data]
"*" = ["*.*"]

# Pytest 配置
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=cocox",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage 配置
[tool.coverage.run]
source = ["cocox"]
branch = true
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Ruff 配置
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["E501"]

# Mypy
# ----

[tool.mypy]
files = "."

# Use strict defaults
strict = true
warn_unreachable = true
warn_no_return = true

[[tool.mypy.overrides]]
# Don't require test functions to include types
module = "tests.*"
allow_untyped_defs = true
disable_error_code = "attr-defined"

